/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export enum ErrorInput { VaultPriceFeedAlreadyInitialized = 'VaultPriceFeedAlreadyInitialized', VaultPriceFeedForbidden = 'VaultPriceFeedForbidden', VaultPriceFeedInvalidPrice = 'VaultPriceFeedInvalidPrice', VaultPriceFeedInvalidPriceFeed = 'VaultPriceFeedInvalidPriceFeed', VaultPriceFeedInvalidPriceFeedToUpdate = 'VaultPriceFeedInvalidPriceFeedToUpdate', VaultPriceFeedPriceIsAhead = 'VaultPriceFeedPriceIsAhead', VaultPriceFeedPriceIsStale = 'VaultPriceFeedPriceIsStale', VaultPriceFeedCouldNotFetchPrice = 'VaultPriceFeedCouldNotFetchPrice', VaultPriceFeedInvalidSignature = 'VaultPriceFeedInvalidSignature', VaultPriceFeedSignatureAlreadyUsed = 'VaultPriceFeedSignatureAlreadyUsed', VaultPriceFeedInvalidMessageTimestamp = 'VaultPriceFeedInvalidMessageTimestamp' };
export enum ErrorOutput { VaultPriceFeedAlreadyInitialized = 'VaultPriceFeedAlreadyInitialized', VaultPriceFeedForbidden = 'VaultPriceFeedForbidden', VaultPriceFeedInvalidPrice = 'VaultPriceFeedInvalidPrice', VaultPriceFeedInvalidPriceFeed = 'VaultPriceFeedInvalidPriceFeed', VaultPriceFeedInvalidPriceFeedToUpdate = 'VaultPriceFeedInvalidPriceFeedToUpdate', VaultPriceFeedPriceIsAhead = 'VaultPriceFeedPriceIsAhead', VaultPriceFeedPriceIsStale = 'VaultPriceFeedPriceIsStale', VaultPriceFeedCouldNotFetchPrice = 'VaultPriceFeedCouldNotFetchPrice', VaultPriceFeedInvalidSignature = 'VaultPriceFeedInvalidSignature', VaultPriceFeedSignatureAlreadyUsed = 'VaultPriceFeedSignatureAlreadyUsed', VaultPriceFeedInvalidMessageTimestamp = 'VaultPriceFeedInvalidMessageTimestamp' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type PriceInput = { confidence: BigNumberish, exponent: BigNumberish, price: BigNumberish, publish_time: BigNumberish };
export type PriceOutput = { confidence: BN, exponent: number, price: BN, publish_time: BN };
export type PriceMessageInput = { asset: AssetIdInput, price: BigNumberish, timestamp: BigNumberish };
export type PriceMessageOutput = { asset: AssetIdOutput, price: BN, timestamp: BN };
export type SetGovInput = { gov: IdentityInput };
export type SetGovOutput = { gov: IdentityOutput };
export type SetPriceInput = { asset: AssetIdInput, price: PriceInput, timestamp: BigNumberish };
export type SetPriceOutput = { asset: AssetIdOutput, price: PriceOutput, timestamp: BN };
export type SetPriceSignerInput = { price_signer: AddressInput };
export type SetPriceSignerOutput = { price_signer: AddressOutput };
export type SetPythPriceConfigsInput = { max_price_aheadness: BigNumberish, max_price_staleness: BigNumberish };
export type SetPythPriceConfigsOutput = { max_price_aheadness: BN, max_price_staleness: BN };
export type SetPythPricefeedInput = { asset: AssetIdInput, pricefeed_id: string, decimals: BigNumberish };
export type SetPythPricefeedOutput = { asset: AssetIdOutput, pricefeed_id: string, decimals: number };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum errors::Error",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3",
      "metadataTypeId": 1
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 2
    },
    {
      "type": "struct core_interfaces::vault_pricefeed::PriceMessage",
      "concreteTypeId": "a3d842ea38a7e9891a181b49743f3518d999cad35b57a945b0ce4b16a7816353",
      "metadataTypeId": 3
    },
    {
      "type": "struct events::SetGov",
      "concreteTypeId": "ed61073796af24b33de31ddc59c970aefa2613605f42d0dc94a2b1360de862c8",
      "metadataTypeId": 4
    },
    {
      "type": "struct events::SetPrice",
      "concreteTypeId": "c6e077f7c7d165e81081fd28899d83f97a132e941a068eb01da590474f3baef5",
      "metadataTypeId": 5
    },
    {
      "type": "struct events::SetPriceSigner",
      "concreteTypeId": "d03b93ffaff5ad8ea0bba6ff67d9ce7a9e52d4ebcb03ad70a2bd8674a551b04c",
      "metadataTypeId": 6
    },
    {
      "type": "struct events::SetPythPriceConfigs",
      "concreteTypeId": "681f9821c86c63d98a35c9570ffc0104c0e7e47dd5eef21e89bd1d10e7727727",
      "metadataTypeId": 7
    },
    {
      "type": "struct events::SetPythPricefeed",
      "concreteTypeId": "fd004ee15e37fb933c9ba34c694dd302673dabb168ab58afd0b5f8f79f6f8d24",
      "metadataTypeId": 8
    },
    {
      "type": "struct std::address::Address",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "metadataTypeId": 10
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 11
    },
    {
      "type": "struct std::b512::B512",
      "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "metadataTypeId": 12
    },
    {
      "type": "u256",
      "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
    },
    {
      "type": "u32",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    },
    {
      "type": "u8",
      "concreteTypeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 2]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "enum errors::Error",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "VaultPriceFeedAlreadyInitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedForbidden",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedInvalidPrice",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedInvalidPriceFeed",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedInvalidPriceFeedToUpdate",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedPriceIsAhead",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedPriceIsStale",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedCouldNotFetchPrice",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedInvalidSignature",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedSignatureAlreadyUsed",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "VaultPriceFeedInvalidMessageTimestamp",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "Address",
          "typeId": 10
        },
        {
          "name": "ContractId",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct core_interfaces::vault_pricefeed::PriceMessage",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "asset",
          "typeId": 11
        },
        {
          "name": "price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "timestamp",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::SetGov",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "gov",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct events::SetPrice",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "asset",
          "typeId": 11
        },
        {
          "name": "price",
          "typeId": 9
        },
        {
          "name": "timestamp",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::SetPriceSigner",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "price_signer",
          "typeId": 10
        }
      ]
    },
    {
      "type": "struct events::SetPythPriceConfigs",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "max_price_aheadness",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "max_price_staleness",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::SetPythPricefeed",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "asset",
          "typeId": 11
        },
        {
          "name": "pricefeed_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "decimals",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ]
    },
    {
      "type": "struct pyth_interface::data_structures::price::Price",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "confidence",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "exponent",
          "typeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        },
        {
          "name": "price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "publish_time",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::b512::B512",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "maximize",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "get_price",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_revision",
      "output": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b",
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " Get the revision of the contract"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "gov",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "price_signer",
          "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308"
        }
      ],
      "name": "initialize",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "pyth_pricefeed",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "decimals",
          "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
        }
      ],
      "name": "set_asset_config",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "gov",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "set_gov",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "max_price_aheadness",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "max_price_staleness",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "set_price_configs",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "price_signer",
          "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308"
        }
      ],
      "name": "set_price_signer",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "price_message",
          "concreteTypeId": "a3d842ea38a7e9891a181b49743f3518d999cad35b57a945b0ce4b16a7816353"
        },
        {
          "name": "signature",
          "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322"
        }
      ],
      "name": "update_price",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " to prevent signature replay attacks, timestamp is encoded within the price message"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " timestamp can be at most 120s (2min) within the current onchain Unix timestamp"
          ]
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "5432468599230875534",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3"
    },
    {
      "logId": "17104960795062510771",
      "concreteTypeId": "ed61073796af24b33de31ddc59c970aefa2613605f42d0dc94a2b1360de862c8"
    },
    {
      "logId": "15004749309892996494",
      "concreteTypeId": "d03b93ffaff5ad8ea0bba6ff67d9ce7a9e52d4ebcb03ad70a2bd8674a551b04c"
    },
    {
      "logId": "18230658021451103123",
      "concreteTypeId": "fd004ee15e37fb933c9ba34c694dd302673dabb168ab58afd0b5f8f79f6f8d24"
    },
    {
      "logId": "7502882775086425049",
      "concreteTypeId": "681f9821c86c63d98a35c9570ffc0104c0e7e47dd5eef21e89bd1d10e7727727"
    },
    {
      "logId": "14330585920385934824",
      "concreteTypeId": "c6e077f7c7d165e81081fd28899d83f97a132e941a068eb01da590474f3baef5"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "38a1b038206f348ec947ba5770c6d713148c9d8bb0b312f47acc88777da1c09d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "3c1cfb0ec3385216c3d450413e16ead19ecfb2898336f0568ff6222505b90726",
    "value": "0000000000000064000000000000000000000000000000000000000000000000"
  },
  {
    "key": "7c0c6bd6ee7100bf40f8ea0c7ccfdb0e5e906202745a777a119f9f465421e25f",
    "value": "000000000000001e000000000000000000000000000000000000000000000000"
  },
  {
    "key": "b57438ef33ebab31b8e807fe48b4f51eacc5721a303622d01447b0e5a0c818ca",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class VaultPricefeedInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    get_price: FunctionFragment;
    get_revision: FunctionFragment;
    initialize: FunctionFragment;
    set_asset_config: FunctionFragment;
    set_gov: FunctionFragment;
    set_price_configs: FunctionFragment;
    set_price_signer: FunctionFragment;
    update_price: FunctionFragment;
  };
}

export class VaultPricefeed extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: VaultPricefeedInterface;
  declare functions: {
    get_price: InvokeFunction<[asset: AssetIdInput, maximize: boolean], BN>;
    get_revision: InvokeFunction<[], number>;
    initialize: InvokeFunction<[gov: IdentityInput, price_signer: AddressInput], void>;
    set_asset_config: InvokeFunction<[asset: AssetIdInput, pyth_pricefeed: string, decimals: BigNumberish], void>;
    set_gov: InvokeFunction<[gov: IdentityInput], void>;
    set_price_configs: InvokeFunction<[max_price_aheadness: BigNumberish, max_price_staleness: BigNumberish], void>;
    set_price_signer: InvokeFunction<[price_signer: AddressInput], void>;
    update_price: InvokeFunction<[price_message: PriceMessageInput, signature: string], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
