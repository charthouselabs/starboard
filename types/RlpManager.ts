/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export enum ErrorInput { RLPManagerAlreadyInitialized = 'RLPManagerAlreadyInitialized', RLPManagerForbidden = 'RLPManagerForbidden', RLPManagerOnlyHandler = 'RLPManagerOnlyHandler', RLPManagerNonReentrant = 'RLPManagerNonReentrant', RLPManagerHandlerZero = 'RLPManagerHandlerZero', RLPManagerHasUpgraded = 'RLPManagerHasUpgraded', RLPManagerInvalidCooldownDuration = 'RLPManagerInvalidCooldownDuration', RLPManagerForbiddenInPrivateMode = 'RLPManagerForbiddenInPrivateMode', RLPManagerInvalidWeight = 'RLPManagerInvalidWeight', RLPManagerInvalidRLPAssetForwarded = 'RLPManagerInvalidRLPAssetForwarded', RLPManagerInvalidRLPAmountForwarded = 'RLPManagerInvalidRLPAmountForwarded', RLPManagerInvalidAssetForwarded = 'RLPManagerInvalidAssetForwarded', RLPManagerInvalidAssetAmountForwarded = 'RLPManagerInvalidAssetAmountForwarded', RLPManagerInsufficientRUSDOutput = 'RLPManagerInsufficientRUSDOutput', RLPManagerInsufficientRLPOutput = 'RLPManagerInsufficientRLPOutput', RLPManagerCooldownDurationNotYetPassed = 'RLPManagerCooldownDurationNotYetPassed', RLPManagerInsufficientOutput = 'RLPManagerInsufficientOutput', RLPManagerInvalidSignature = 'RLPManagerInvalidSignature' };
export enum ErrorOutput { RLPManagerAlreadyInitialized = 'RLPManagerAlreadyInitialized', RLPManagerForbidden = 'RLPManagerForbidden', RLPManagerOnlyHandler = 'RLPManagerOnlyHandler', RLPManagerNonReentrant = 'RLPManagerNonReentrant', RLPManagerHandlerZero = 'RLPManagerHandlerZero', RLPManagerHasUpgraded = 'RLPManagerHasUpgraded', RLPManagerInvalidCooldownDuration = 'RLPManagerInvalidCooldownDuration', RLPManagerForbiddenInPrivateMode = 'RLPManagerForbiddenInPrivateMode', RLPManagerInvalidWeight = 'RLPManagerInvalidWeight', RLPManagerInvalidRLPAssetForwarded = 'RLPManagerInvalidRLPAssetForwarded', RLPManagerInvalidRLPAmountForwarded = 'RLPManagerInvalidRLPAmountForwarded', RLPManagerInvalidAssetForwarded = 'RLPManagerInvalidAssetForwarded', RLPManagerInvalidAssetAmountForwarded = 'RLPManagerInvalidAssetAmountForwarded', RLPManagerInsufficientRUSDOutput = 'RLPManagerInsufficientRUSDOutput', RLPManagerInsufficientRLPOutput = 'RLPManagerInsufficientRLPOutput', RLPManagerCooldownDurationNotYetPassed = 'RLPManagerCooldownDurationNotYetPassed', RLPManagerInsufficientOutput = 'RLPManagerInsufficientOutput', RLPManagerInvalidSignature = 'RLPManagerInvalidSignature' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum ReentrancyErrorInput { ReentrantCall = 'ReentrantCall' };
export enum ReentrancyErrorOutput { ReentrantCall = 'ReentrantCall' };

export type AddLiquidityInput = { account: IdentityInput, asset: AssetIdInput, amount: BigNumberish, aum_in_rusd: BigNumberish, rlp_supply: BigNumberish, rusd_amount: BigNumberish, mint_amount: BigNumberish };
export type AddLiquidityOutput = { account: IdentityOutput, asset: AssetIdOutput, amount: BN, aum_in_rusd: BN, rlp_supply: BN, rusd_amount: BN, mint_amount: BN };
export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type RemoveLiquidityInput = { account: IdentityInput, asset: AssetIdInput, rlp_amount: BigNumberish, aum_in_rusd: BigNumberish, rlp_supply: BigNumberish, rusd_amount: BigNumberish, amount_out: BigNumberish };
export type RemoveLiquidityOutput = { account: IdentityOutput, asset: AssetIdOutput, rlp_amount: BN, aum_in_rusd: BN, rlp_supply: BN, rusd_amount: BN, amount_out: BN };
export type SetAumAdjustmentInput = { aum_addition: BigNumberish, aum_deduction: BigNumberish };
export type SetAumAdjustmentOutput = { aum_addition: BN, aum_deduction: BN };
export type SetCooldownDurationInput = { cooldown_duration: BigNumberish };
export type SetCooldownDurationOutput = { cooldown_duration: BN };
export type SetGovInput = { gov: IdentityInput };
export type SetGovOutput = { gov: IdentityOutput };
export type SetHandlerInput = { handler: IdentityInput, is_active: boolean };
export type SetHandlerOutput = { handler: IdentityOutput, is_active: boolean };
export type SetInPrivateModeInput = { in_private_mode: boolean };
export type SetInPrivateModeOutput = SetInPrivateModeInput;
export type SetRlpContractInput = { rlp_contract: ContractIdInput };
export type SetRlpContractOutput = { rlp_contract: ContractIdOutput };
export type SetRusdContractInput = { rusd_contract: ContractIdInput };
export type SetRusdContractOutput = { rusd_contract: ContractIdOutput };
export type SetShortsTrackerInput = { shorts_tracker: ContractIdInput };
export type SetShortsTrackerOutput = { shorts_tracker: ContractIdOutput };
export type SetShortsTrackerAvgPriceWeightInput = { shorts_tracker_avg_price_weight: BigNumberish };
export type SetShortsTrackerAvgPriceWeightOutput = { shorts_tracker_avg_price_weight: BN };
export type SetVaultInput = { vault: ContractIdInput };
export type SetVaultOutput = { vault: ContractIdOutput };
export type UpgradeAndWithdrawInput = { asset: AssetIdInput, new_rlp_contract_receiver: ContractIdInput };
export type UpgradeAndWithdrawOutput = { asset: AssetIdOutput, new_rlp_contract_receiver: ContractIdOutput };
export type WriteLastAddedAtInput = { account: IdentityInput, timestamp: BigNumberish };
export type WriteLastAddedAtOutput = { account: IdentityOutput, timestamp: BN };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum errors::Error",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3",
      "metadataTypeId": 1
    },
    {
      "type": "enum helpers::reentrancy::ReentrancyError",
      "concreteTypeId": "2612db1dbf857e3bd45053dd8464f0c4d0906ec49e6fb9d510402423176610d2",
      "metadataTypeId": 2
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 3
    },
    {
      "type": "struct events::AddLiquidity",
      "concreteTypeId": "2b0e032df05fde5983b2b9679381b7d50b86d5b2906433071a974b5a60f108e9",
      "metadataTypeId": 6
    },
    {
      "type": "struct events::RemoveLiquidity",
      "concreteTypeId": "097c4276f6aaca3406916024f56092501e2c9ea73e31bcbb671f896f4f95a93e",
      "metadataTypeId": 7
    },
    {
      "type": "struct events::SetAumAdjustment",
      "concreteTypeId": "fe1d1d2fbba2e2d5f0188fbeeb7148d35a33bcf6d20e8ce51b8e1343c545fae3",
      "metadataTypeId": 8
    },
    {
      "type": "struct events::SetCooldownDuration",
      "concreteTypeId": "f5e45e4cb6adcbbe837ac5626db32caee2d605feda7c7fbccc23fddac2e3253e",
      "metadataTypeId": 9
    },
    {
      "type": "struct events::SetGov",
      "concreteTypeId": "ed61073796af24b33de31ddc59c970aefa2613605f42d0dc94a2b1360de862c8",
      "metadataTypeId": 10
    },
    {
      "type": "struct events::SetHandler",
      "concreteTypeId": "e7a66a8f1aabbf6b1d7b745bfed0bb975d6e9791b6d392b4077153fc03dbd8bb",
      "metadataTypeId": 11
    },
    {
      "type": "struct events::SetInPrivateMode",
      "concreteTypeId": "ebd0f7847ee587a8e0e70604a7a7a6139911f7ed04fae96b19b6130c2749af56",
      "metadataTypeId": 12
    },
    {
      "type": "struct events::SetRlpContract",
      "concreteTypeId": "b15bdc3702522552148fa85b8cfd5edaa2e390bbc4cb25cbaeb96271836b0aed",
      "metadataTypeId": 13
    },
    {
      "type": "struct events::SetRusdContract",
      "concreteTypeId": "4d4ffbd27f36601767fe4cdd669919d3c4e4e4448aaed4c6cef89202d5872dc3",
      "metadataTypeId": 14
    },
    {
      "type": "struct events::SetShortsTracker",
      "concreteTypeId": "bee52e584ad20a6297856f814a6b11c161ecff4b6204c78c27a9aaa864604b51",
      "metadataTypeId": 15
    },
    {
      "type": "struct events::SetShortsTrackerAvgPriceWeight",
      "concreteTypeId": "14b61ccf17ce812774fb81593ac4c29dd79c591c733384086231bdc237529286",
      "metadataTypeId": 16
    },
    {
      "type": "struct events::SetVault",
      "concreteTypeId": "7760510060b7b88063c87f50d604f13ee76473a900f6955bcef68fd92705a65e",
      "metadataTypeId": 17
    },
    {
      "type": "struct events::UpgradeAndWithdraw",
      "concreteTypeId": "af7561a0a3d08baff7148bb194e6fcccb0120b8e433f6afce91b3c5ca369abc9",
      "metadataTypeId": 18
    },
    {
      "type": "struct events::WriteLastAddedAt",
      "concreteTypeId": "b2ccbc0ae82fb3464dd27079a916ff2cc82457ebbc55d2e8c6889cbf2670e858",
      "metadataTypeId": 19
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 21
    },
    {
      "type": "struct std::contract_id::ContractId",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "metadataTypeId": 22
    },
    {
      "type": "struct std::vec::Vec<u256>",
      "concreteTypeId": "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      "metadataTypeId": 24,
      "typeArguments": [
        "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
      ]
    },
    {
      "type": "u256",
      "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    },
    {
      "type": "u8",
      "concreteTypeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
    }
  ],
  "metadataTypes": [
    {
      "type": "b256",
      "metadataTypeId": 0
    },
    {
      "type": "enum errors::Error",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "RLPManagerAlreadyInitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerForbidden",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerOnlyHandler",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerNonReentrant",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerHandlerZero",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerHasUpgraded",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidCooldownDuration",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerForbiddenInPrivateMode",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidWeight",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidRLPAssetForwarded",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidRLPAmountForwarded",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidAssetForwarded",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidAssetAmountForwarded",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInsufficientRUSDOutput",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInsufficientRLPOutput",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerCooldownDurationNotYetPassed",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInsufficientOutput",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "RLPManagerInvalidSignature",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum helpers::reentrancy::ReentrancyError",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "ReentrantCall",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "Address",
          "typeId": 20
        },
        {
          "name": "ContractId",
          "typeId": 22
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 4
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 5
    },
    {
      "type": "struct events::AddLiquidity",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "account",
          "typeId": 3
        },
        {
          "name": "asset",
          "typeId": 21
        },
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "aum_in_rusd",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "rlp_supply",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "rusd_amount",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "mint_amount",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ]
    },
    {
      "type": "struct events::RemoveLiquidity",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "account",
          "typeId": 3
        },
        {
          "name": "asset",
          "typeId": 21
        },
        {
          "name": "rlp_amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "aum_in_rusd",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "rlp_supply",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "rusd_amount",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "amount_out",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ]
    },
    {
      "type": "struct events::SetAumAdjustment",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "aum_addition",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "aum_deduction",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ]
    },
    {
      "type": "struct events::SetCooldownDuration",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "cooldown_duration",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::SetGov",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "gov",
          "typeId": 3
        }
      ]
    },
    {
      "type": "struct events::SetHandler",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "handler",
          "typeId": 3
        },
        {
          "name": "is_active",
          "typeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ]
    },
    {
      "type": "struct events::SetInPrivateMode",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "in_private_mode",
          "typeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ]
    },
    {
      "type": "struct events::SetRlpContract",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "rlp_contract",
          "typeId": 22
        }
      ]
    },
    {
      "type": "struct events::SetRusdContract",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "rusd_contract",
          "typeId": 22
        }
      ]
    },
    {
      "type": "struct events::SetShortsTracker",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "shorts_tracker",
          "typeId": 22
        }
      ]
    },
    {
      "type": "struct events::SetShortsTrackerAvgPriceWeight",
      "metadataTypeId": 16,
      "components": [
        {
          "name": "shorts_tracker_avg_price_weight",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::SetVault",
      "metadataTypeId": 17,
      "components": [
        {
          "name": "vault",
          "typeId": 22
        }
      ]
    },
    {
      "type": "struct events::UpgradeAndWithdraw",
      "metadataTypeId": 18,
      "components": [
        {
          "name": "asset",
          "typeId": 21
        },
        {
          "name": "new_rlp_contract_receiver",
          "typeId": 22
        }
      ]
    },
    {
      "type": "struct events::WriteLastAddedAt",
      "metadataTypeId": 19,
      "components": [
        {
          "name": "account",
          "typeId": 3
        },
        {
          "name": "timestamp",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 20,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 21,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 22,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 23,
      "components": [
        {
          "name": "ptr",
          "typeId": 5
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        4
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 24,
      "components": [
        {
          "name": "buf",
          "typeId": 23,
          "typeArguments": [
            {
              "name": "",
              "typeId": 4
            }
          ]
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        4
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "min_rusd",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "min_rlp",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "add_liquidity",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "account",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "min_rusd",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "min_rlp",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "add_liquidity_for_account",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "maximize",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "get_aum_in_rusd",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_aums",
      "output": "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "maximize",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "get_price",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_revision",
      "output": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b",
      "attributes": null
    },
    {
      "inputs": [],
      "name": "get_rlp_contract",
      "output": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_rusd_contract",
      "output": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_vault",
      "output": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "vault",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        },
        {
          "name": "rusd_contract",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        },
        {
          "name": "rlp_contract",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        },
        {
          "name": "shorts_tracker",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        },
        {
          "name": "cooldown_duration",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "initialize",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_out",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "rlp_amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "min_out",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "remove_liquidity",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " this call must be batched with a call to `RUSD.set_user_staked_balance`"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " to get the correct staked balance for the user"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " also, RLP must be forwarded with the call"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "account",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "asset_out",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "rlp_amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "min_out",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "remove_liquidity_for_account",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " this call must be batched with a call to `RUSD.set_user_staked_balance`"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " to get the correct staked balance for the user"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " also, RLP must be forwarded with the call"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "aum_addition",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "aum_deduction",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ],
      "name": "set_aum_adjustment",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "cooldown_duration",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "set_cooldown_duration",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "gov",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "set_gov",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "handler",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "is_active",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "set_handler",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "in_private_mode",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "set_in_private_mode",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "shorts_tracker",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        }
      ],
      "name": "set_shorts_tracker",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "shorts_tracker_avg_price_weight",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "set_shorts_tracker_avg_price_weight",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "vault",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        }
      ],
      "name": "set_vault",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "new_rlp_contract_receiver",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        }
      ],
      "name": "upgrade_and_withdraw",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "2743496043835784763",
      "concreteTypeId": "2612db1dbf857e3bd45053dd8464f0c4d0906ec49e6fb9d510402423176610d2"
    },
    {
      "logId": "5432468599230875534",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3"
    },
    {
      "logId": "12883879389031281478",
      "concreteTypeId": "b2ccbc0ae82fb3464dd27079a916ff2cc82457ebbc55d2e8c6889cbf2670e858"
    },
    {
      "logId": "3102420689146076761",
      "concreteTypeId": "2b0e032df05fde5983b2b9679381b7d50b86d5b2906433071a974b5a60f108e9"
    },
    {
      "logId": "17104960795062510771",
      "concreteTypeId": "ed61073796af24b33de31ddc59c970aefa2613605f42d0dc94a2b1360de862c8"
    },
    {
      "logId": "12780050496414164306",
      "concreteTypeId": "b15bdc3702522552148fa85b8cfd5edaa2e390bbc4cb25cbaeb96271836b0aed"
    },
    {
      "logId": "13755451593620327010",
      "concreteTypeId": "bee52e584ad20a6297856f814a6b11c161ecff4b6204c78c27a9aaa864604b51"
    },
    {
      "logId": "8601964350342150272",
      "concreteTypeId": "7760510060b7b88063c87f50d604f13ee76473a900f6955bcef68fd92705a65e"
    },
    {
      "logId": "5570948145576566807",
      "concreteTypeId": "4d4ffbd27f36601767fe4cdd669919d3c4e4e4448aaed4c6cef89202d5872dc3"
    },
    {
      "logId": "17718390517557742526",
      "concreteTypeId": "f5e45e4cb6adcbbe837ac5626db32caee2d605feda7c7fbccc23fddac2e3253e"
    },
    {
      "logId": "683494322165434932",
      "concreteTypeId": "097c4276f6aaca3406916024f56092501e2c9ea73e31bcbb671f896f4f95a93e"
    },
    {
      "logId": "18310823750806987477",
      "concreteTypeId": "fe1d1d2fbba2e2d5f0188fbeeb7148d35a33bcf6d20e8ce51b8e1343c545fae3"
    },
    {
      "logId": "16692146231755652971",
      "concreteTypeId": "e7a66a8f1aabbf6b1d7b745bfed0bb975d6e9791b6d392b4077153fc03dbd8bb"
    },
    {
      "logId": "16992353542505596840",
      "concreteTypeId": "ebd0f7847ee587a8e0e70604a7a7a6139911f7ed04fae96b19b6130c2749af56"
    },
    {
      "logId": "1492412002303115559",
      "concreteTypeId": "14b61ccf17ce812774fb81593ac4c29dd79c591c733384086231bdc237529286"
    },
    {
      "logId": "12643118871483550639",
      "concreteTypeId": "af7561a0a3d08baff7148bb194e6fcccb0120b8e433f6afce91b3c5ca369abc9"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "0a5dc2278378db122e771fb62e1aec4bc469c04bdc198c9f75abbeb822a209ca",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "2044a8fa76d8380f66e8f1ba0796578b12773f4777de88e157c5e1937a50dcd4",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "276f6ddc22527f9fe28918dc807819298c2c8a686edbe5b63d7ffc13079ad20a",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "38a1b038206f348ec947ba5770c6d713148c9d8bb0b312f47acc88777da1c09d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "5d1ada11df5117f4d33a45b635cf8814d2e0f48be260fab8820022d44d2e3b96",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "6add8c562715ad20c2454007cb6b136306d610c65b182e9024790934ecb00830",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "7724a7ec340c661b5ef028e0e4ce14609aeb680d68eedb38ad9d40271002eb00",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "a33a0e4397ace67fa1a7ca4029be95276407871a6f9b9101345c1a88a541a7ce",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "b4e86c2883fa9fc09dfd5a1fb6f90678277191f844687dfe97cf68efaa9a2f60",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "e482c77865311125b14c2dcf393a8d5a0dff68e1ec2618d8a79a304c87e47b98",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "f7ed6250d1651d4ae9352669d94e973bdbc5cf06dd76bea3d9013741892da811",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class RlpManagerInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    add_liquidity: FunctionFragment;
    add_liquidity_for_account: FunctionFragment;
    get_aum_in_rusd: FunctionFragment;
    get_aums: FunctionFragment;
    get_price: FunctionFragment;
    get_revision: FunctionFragment;
    get_rlp_contract: FunctionFragment;
    get_rusd_contract: FunctionFragment;
    get_vault: FunctionFragment;
    initialize: FunctionFragment;
    remove_liquidity: FunctionFragment;
    remove_liquidity_for_account: FunctionFragment;
    set_aum_adjustment: FunctionFragment;
    set_cooldown_duration: FunctionFragment;
    set_gov: FunctionFragment;
    set_handler: FunctionFragment;
    set_in_private_mode: FunctionFragment;
    set_shorts_tracker: FunctionFragment;
    set_shorts_tracker_avg_price_weight: FunctionFragment;
    set_vault: FunctionFragment;
    upgrade_and_withdraw: FunctionFragment;
  };
}

export class RlpManager extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: RlpManagerInterface;
  declare functions: {
    add_liquidity: InvokeFunction<[asset: AssetIdInput, amount: BigNumberish, min_rusd: BigNumberish, min_rlp: BigNumberish], BN>;
    add_liquidity_for_account: InvokeFunction<[account: IdentityInput, asset: AssetIdInput, amount: BigNumberish, min_rusd: BigNumberish, min_rlp: BigNumberish], BN>;
    get_aum_in_rusd: InvokeFunction<[maximize: boolean], BN>;
    get_aums: InvokeFunction<[], Vec<BN>>;
    get_price: InvokeFunction<[maximize: boolean], BN>;
    get_revision: InvokeFunction<[], number>;
    get_rlp_contract: InvokeFunction<[], ContractIdOutput>;
    get_rusd_contract: InvokeFunction<[], ContractIdOutput>;
    get_vault: InvokeFunction<[], ContractIdOutput>;
    initialize: InvokeFunction<[vault: ContractIdInput, rusd_contract: ContractIdInput, rlp_contract: ContractIdInput, shorts_tracker: ContractIdInput, cooldown_duration: BigNumberish], void>;
    remove_liquidity: InvokeFunction<[asset_out: AssetIdInput, rlp_amount: BigNumberish, min_out: BigNumberish, receiver: IdentityInput], BN>;
    remove_liquidity_for_account: InvokeFunction<[account: IdentityInput, asset_out: AssetIdInput, rlp_amount: BigNumberish, min_out: BigNumberish, receiver: IdentityInput], BN>;
    set_aum_adjustment: InvokeFunction<[aum_addition: BigNumberish, aum_deduction: BigNumberish], void>;
    set_cooldown_duration: InvokeFunction<[cooldown_duration: BigNumberish], void>;
    set_gov: InvokeFunction<[gov: IdentityInput], void>;
    set_handler: InvokeFunction<[handler: IdentityInput, is_active: boolean], void>;
    set_in_private_mode: InvokeFunction<[in_private_mode: boolean], void>;
    set_shorts_tracker: InvokeFunction<[shorts_tracker: ContractIdInput], void>;
    set_shorts_tracker_avg_price_weight: InvokeFunction<[shorts_tracker_avg_price_weight: BigNumberish], void>;
    set_vault: InvokeFunction<[vault: ContractIdInput], void>;
    upgrade_and_withdraw: InvokeFunction<[asset: AssetIdInput, new_rlp_contract_receiver: ContractIdInput], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
