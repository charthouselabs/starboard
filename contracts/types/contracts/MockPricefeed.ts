/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
  Forc version: 0.66.4
  Fuel-Core version: 0.44.0
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  Bytes,
  FunctionFragment,
  InvokeFunction,
  StdString,
} from 'fuels';

import type { Enum } from "./common";

export enum ErrorInput { PriceFeedAlreadyInitialized = 'PriceFeedAlreadyInitialized', PricefeedGovZero = 'PricefeedGovZero', PricefeedForbidden = 'PricefeedForbidden', PricefeedRoundNotComplete = 'PricefeedRoundNotComplete' };
export enum ErrorOutput { PriceFeedAlreadyInitialized = 'PriceFeedAlreadyInitialized', PricefeedGovZero = 'PricefeedGovZero', PricefeedForbidden = 'PricefeedForbidden', PricefeedRoundNotComplete = 'PricefeedRoundNotComplete' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "(u64, u256, u8)",
      "concreteTypeId": "d52cc73e2f49babf530cf827cbfc791da9551ca61d98de2f074dc0a101234c88",
      "metadataTypeId": 0
    },
    {
      "type": "enum errors::Error",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3",
      "metadataTypeId": 2
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 3
    },
    {
      "type": "struct std::string::String",
      "concreteTypeId": "9a7f1d3e963c10e0a4ea70a8e20a4813d1dc5682e28f74cb102ae50d32f7f98c",
      "metadataTypeId": 9
    },
    {
      "type": "u256",
      "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "__tuple_element",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "__tuple_element",
          "typeId": 10
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 1
    },
    {
      "type": "enum errors::Error",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "PriceFeedAlreadyInitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "PricefeedGovZero",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "PricefeedForbidden",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "PricefeedRoundNotComplete",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "Address",
          "typeId": 5
        },
        {
          "name": "ContractId",
          "typeId": 8
        }
      ]
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 4
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "bits",
          "typeId": 1
        }
      ]
    },
    {
      "type": "struct std::bytes::Bytes",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "buf",
          "typeId": 7
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::bytes::RawBytes",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "ptr",
          "typeId": 4
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "bits",
          "typeId": 1
        }
      ]
    },
    {
      "type": "struct std::string::String",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "bytes",
          "typeId": 6
        }
      ]
    },
    {
      "type": "u8",
      "metadataTypeId": 10
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "get_latest_round",
      "output": "d52cc73e2f49babf530cf827cbfc791da9551ca61d98de2f074dc0a101234c88",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "round_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "get_round_data",
      "output": "d52cc73e2f49babf530cf827cbfc791da9551ca61d98de2f074dc0a101234c88",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "gov",
      "output": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "gov",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "description",
          "concreteTypeId": "9a7f1d3e963c10e0a4ea70a8e20a4813d1dc5682e28f74cb102ae50d32f7f98c"
        }
      ],
      "name": "initialize",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "latest_answer",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "latest_round",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "new_answer",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ],
      "name": "set_latest_answer",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "5432468599230875534",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "1797db9c2a7f9cf32f7e5392be6fc630e686c11cc5102e9415cd5d33dd5327f9",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "2ca8fbe18370e87ed7d43a398bdf82081b08517fbe58475956b9582f33f9590e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "38a1b038206f348ec947ba5770c6d713148c9d8bb0b312f47acc88777da1c09d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "901c1a6e690cc729678c6cb1054a6f00fb0f9a67acd37d577b68185bea2e91a9",
    "value": "0900000000000000000000000000000000000000000000000000000000000000"
  }
];

export class MockPricefeedInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    get_latest_round: FunctionFragment;
    get_round_data: FunctionFragment;
    gov: FunctionFragment;
    initialize: FunctionFragment;
    latest_answer: FunctionFragment;
    latest_round: FunctionFragment;
    set_latest_answer: FunctionFragment;
  };
}

export class MockPricefeed extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: MockPricefeedInterface;
  declare functions: {
    get_latest_round: InvokeFunction<[], [BN, BN, number]>;
    get_round_data: InvokeFunction<[round_id: BigNumberish], [BN, BN, number]>;
    gov: InvokeFunction<[], IdentityOutput>;
    initialize: InvokeFunction<[gov: IdentityInput, description: StdString], void>;
    latest_answer: InvokeFunction<[], BN>;
    latest_round: InvokeFunction<[], BN>;
    set_latest_answer: InvokeFunction<[new_answer: BigNumberish], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
