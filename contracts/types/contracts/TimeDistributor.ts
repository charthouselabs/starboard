/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
  Forc version: 0.66.4
  Fuel-Core version: 0.44.0
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export enum ErrorInput { TimeDistributorAlreadyInitialized = 'TimeDistributorAlreadyInitialized', TimeDistributorForbidden = 'TimeDistributorForbidden', TimeDistributorPendingDistribution = 'TimeDistributorPendingDistribution', TimeDistributorInvalidLen = 'TimeDistributorInvalidLen' };
export enum ErrorOutput { TimeDistributorAlreadyInitialized = 'TimeDistributorAlreadyInitialized', TimeDistributorForbidden = 'TimeDistributorForbidden', TimeDistributorPendingDistribution = 'TimeDistributorPendingDistribution', TimeDistributorInvalidLen = 'TimeDistributorInvalidLen' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type AssetsPerIntervalChangeInput = { receiver: IdentityInput, amount: BigNumberish };
export type AssetsPerIntervalChangeOutput = { receiver: IdentityOutput, amount: BN };
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type DistributeInput = { receiver: IdentityInput, amount: BigNumberish };
export type DistributeOutput = { receiver: IdentityOutput, amount: BN };
export type DistributionChangeInput = { receiver: IdentityInput, amount: BigNumberish, reward_asset: AssetIdInput };
export type DistributionChangeOutput = { receiver: IdentityOutput, amount: BN, reward_asset: AssetIdOutput };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "enum errors::Error",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3",
      "metadataTypeId": 1
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 2
    },
    {
      "type": "struct events::AssetsPerIntervalChange",
      "concreteTypeId": "321c64b49c63195028bc748bd78c7161464865151c11e239ee2473a0e8f310a6",
      "metadataTypeId": 5
    },
    {
      "type": "struct events::Distribute",
      "concreteTypeId": "ae742e1e86a4471c12c30a7a42c501bb83d465b710dc909767a481658d897787",
      "metadataTypeId": 6
    },
    {
      "type": "struct events::DistributionChange",
      "concreteTypeId": "5a6c2b8f1f98016fa61a0b20a83c5f0cce175d3624aeac6b2699433e2e2e60b8",
      "metadataTypeId": 7
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 9
    },
    {
      "type": "struct std::vec::Vec<enum std::identity::Identity>",
      "concreteTypeId": "2f79033d0d3729398611309f48578b56cf5162ba85e50f4d8fb79c9d9d1abc7b",
      "metadataTypeId": 12,
      "typeArguments": [
        "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
      ]
    },
    {
      "type": "struct std::vec::Vec<struct std::asset_id::AssetId>",
      "concreteTypeId": "8b2275934873f381a769c82334e6f66595eeb350d8b2dd012eef4d9bb117942b",
      "metadataTypeId": 12,
      "typeArguments": [
        "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
      ]
    },
    {
      "type": "struct std::vec::Vec<u64>",
      "concreteTypeId": "d5bfe1d4e1ace20166c9b50cadd47e862020561bde24f5189cfc2723f5ed76f4",
      "metadataTypeId": 12,
      "typeArguments": [
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
      ]
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "b256",
      "metadataTypeId": 0
    },
    {
      "type": "enum errors::Error",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "TimeDistributorAlreadyInitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "TimeDistributorForbidden",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "TimeDistributorPendingDistribution",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "TimeDistributorInvalidLen",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "Address",
          "typeId": 8
        },
        {
          "name": "ContractId",
          "typeId": 10
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 3
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 4
    },
    {
      "type": "struct events::AssetsPerIntervalChange",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "receiver",
          "typeId": 2
        },
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::Distribute",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "receiver",
          "typeId": 2
        },
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::DistributionChange",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "receiver",
          "typeId": 2
        },
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "reward_asset",
          "typeId": 9
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "ptr",
          "typeId": 4
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        3
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "buf",
          "typeId": 11,
          "typeArguments": [
            {
              "name": "",
              "typeId": 3
            }
          ]
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        3
      ]
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "distribute",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "account",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_assets_per_interval",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_distribution_amount",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_intervals",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "get_reward_asset",
      "output": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "initialize",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "set_assets_per_interval",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "receivers",
          "concreteTypeId": "2f79033d0d3729398611309f48578b56cf5162ba85e50f4d8fb79c9d9d1abc7b"
        },
        {
          "name": "amounts",
          "concreteTypeId": "d5bfe1d4e1ace20166c9b50cadd47e862020561bde24f5189cfc2723f5ed76f4"
        },
        {
          "name": "reward_assets",
          "concreteTypeId": "8b2275934873f381a769c82334e6f66595eeb350d8b2dd012eef4d9bb117942b"
        }
      ],
      "name": "set_distribution",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "new_gov",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "set_gov",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "update_last_distribution_time",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "12570723168540706588",
      "concreteTypeId": "ae742e1e86a4471c12c30a7a42c501bb83d465b710dc909767a481658d897787"
    },
    {
      "logId": "5432468599230875534",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3"
    },
    {
      "logId": "3610871728124926288",
      "concreteTypeId": "321c64b49c63195028bc748bd78c7161464865151c11e239ee2473a0e8f310a6"
    },
    {
      "logId": "6515630654608638319",
      "concreteTypeId": "5a6c2b8f1f98016fa61a0b20a83c5f0cce175d3624aeac6b2699433e2e2e60b8"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "2ffafb4a4848371bdb81f30ea0c33a78dba2e8995858c2dccc29bd5135ae4844",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "2ffafb4a4848371bdb81f30ea0c33a78dba2e8995858c2dccc29bd5135ae4845",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "38a1b038206f348ec947ba5770c6d713148c9d8bb0b312f47acc88777da1c09d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class TimeDistributorInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    distribute: FunctionFragment;
    get_assets_per_interval: FunctionFragment;
    get_distribution_amount: FunctionFragment;
    get_intervals: FunctionFragment;
    get_reward_asset: FunctionFragment;
    initialize: FunctionFragment;
    set_assets_per_interval: FunctionFragment;
    set_distribution: FunctionFragment;
    set_gov: FunctionFragment;
    update_last_distribution_time: FunctionFragment;
  };
}

export class TimeDistributor extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: TimeDistributorInterface;
  declare functions: {
    distribute: InvokeFunction<[], BN>;
    get_assets_per_interval: InvokeFunction<[account: IdentityInput], BN>;
    get_distribution_amount: InvokeFunction<[receiver: IdentityInput], BN>;
    get_intervals: InvokeFunction<[receiver: IdentityInput], BN>;
    get_reward_asset: InvokeFunction<[receiver: IdentityInput], AssetIdOutput>;
    initialize: InvokeFunction<[], void>;
    set_assets_per_interval: InvokeFunction<[receiver: IdentityInput, amount: BigNumberish], void>;
    set_distribution: InvokeFunction<[receivers: Vec<IdentityInput>, amounts: Vec<BigNumberish>, reward_assets: Vec<AssetIdInput>], void>;
    set_gov: InvokeFunction<[new_gov: IdentityInput], void>;
    update_last_distribution_time: InvokeFunction<[receiver: IdentityInput], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
