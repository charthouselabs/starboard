/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
  Forc version: 0.66.4
  Fuel-Core version: 0.44.0
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export enum ErrorInput { ShortsTrackerAlreadyInitialized = 'ShortsTrackerAlreadyInitialized', ShortsTrackerForbidden = 'ShortsTrackerForbidden', ShortsTrackerHandlerZero = 'ShortsTrackerHandlerZero', ShortsTrackerAlreadyMigrated = 'ShortsTrackerAlreadyMigrated', ShortsTrackerInvalidLen = 'ShortsTrackerInvalidLen', ShortsTrackerVaultZero = 'ShortsTrackerVaultZero' };
export enum ErrorOutput { ShortsTrackerAlreadyInitialized = 'ShortsTrackerAlreadyInitialized', ShortsTrackerForbidden = 'ShortsTrackerForbidden', ShortsTrackerHandlerZero = 'ShortsTrackerHandlerZero', ShortsTrackerAlreadyMigrated = 'ShortsTrackerAlreadyMigrated', ShortsTrackerInvalidLen = 'ShortsTrackerInvalidLen', ShortsTrackerVaultZero = 'ShortsTrackerVaultZero' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type GlobalShortDataUpdatedInput = { asset: AssetIdInput, global_short_size: BigNumberish, global_short_average_price: BigNumberish };
export type GlobalShortDataUpdatedOutput = { asset: AssetIdOutput, global_short_size: BN, global_short_average_price: BN };
export type Signed256Input = { value: BigNumberish, is_neg: boolean };
export type Signed256Output = { value: BN, is_neg: boolean };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "(bool, u256)",
      "concreteTypeId": "3acef182e41da8f557e6ba5daab7129b9c821fb0b9e53c5b1d4a626825f06b8e",
      "metadataTypeId": 0
    },
    {
      "type": "(u256, u256)",
      "concreteTypeId": "2770d9f762bf8ec295d5c253193cd2897c893401f1f438769f92d212641ec779",
      "metadataTypeId": 1
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum errors::Error",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3",
      "metadataTypeId": 3
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 4
    },
    {
      "type": "struct GlobalShortDataUpdated",
      "concreteTypeId": "d11b451065406c0beca7d6d175c3cc06c08e09f1cbdec00e56acfdc96f9b0672",
      "metadataTypeId": 7
    },
    {
      "type": "struct helpers::signed_256::Signed256",
      "concreteTypeId": "0141a3e1b66250fca81a39c0b293c9ad5d4887822b352f6cc34e3b07f5ba4a4b",
      "metadataTypeId": 8
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 10
    },
    {
      "type": "struct std::contract_id::ContractId",
      "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54",
      "metadataTypeId": 11
    },
    {
      "type": "struct std::vec::Vec<struct std::asset_id::AssetId>",
      "concreteTypeId": "8b2275934873f381a769c82334e6f66595eeb350d8b2dd012eef4d9bb117942b",
      "metadataTypeId": 13,
      "typeArguments": [
        "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
      ]
    },
    {
      "type": "struct std::vec::Vec<u256>",
      "concreteTypeId": "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      "metadataTypeId": 13,
      "typeArguments": [
        "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
      ]
    },
    {
      "type": "u256",
      "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        },
        {
          "name": "__tuple_element",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ]
    },
    {
      "type": "(_, _)",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "__tuple_element",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 2
    },
    {
      "type": "enum errors::Error",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "ShortsTrackerAlreadyInitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ShortsTrackerForbidden",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ShortsTrackerHandlerZero",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ShortsTrackerAlreadyMigrated",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ShortsTrackerInvalidLen",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "ShortsTrackerVaultZero",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "Address",
          "typeId": 9
        },
        {
          "name": "ContractId",
          "typeId": 11
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 5
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 6
    },
    {
      "type": "struct GlobalShortDataUpdated",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "asset",
          "typeId": 10
        },
        {
          "name": "global_short_size",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "global_short_average_price",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        }
      ]
    },
    {
      "type": "struct helpers::signed_256::Signed256",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "value",
          "typeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "is_neg",
          "typeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "ptr",
          "typeId": 6
        },
        {
          "name": "cap",
          "typeId": 14
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "buf",
          "typeId": 12,
          "typeArguments": [
            {
              "name": "",
              "typeId": 5
            }
          ]
        },
        {
          "name": "len",
          "typeId": 14
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "type": "u64",
      "metadataTypeId": 14
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "name": "get_global_short_average_prices",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "delta",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "average_price",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "next_price",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "realized_pnl",
          "concreteTypeId": "0141a3e1b66250fca81a39c0b293c9ad5d4887822b352f6cc34e3b07f5ba4a4b"
        }
      ],
      "name": "get_next_delta",
      "output": "3acef182e41da8f557e6ba5daab7129b9c821fb0b9e53c5b1d4a626825f06b8e",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "average_price",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "next_price",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "next_size",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "delta",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "realized_pnl",
          "concreteTypeId": "0141a3e1b66250fca81a39c0b293c9ad5d4887822b352f6cc34e3b07f5ba4a4b"
        }
      ],
      "name": "get_next_global_average_price",
      "output": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "account",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "collateral_asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "index_asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "next_price",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "size_delta",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "is_increase",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "get_next_global_short_data",
      "output": "2770d9f762bf8ec295d5c253193cd2897c893401f1f438769f92d212641ec779",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "account",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "collateral_asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "index_asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "size_delta",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "is_increase",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "get_realized_pnl",
      "output": "0141a3e1b66250fca81a39c0b293c9ad5d4887822b352f6cc34e3b07f5ba4a4b",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "vault",
          "concreteTypeId": "29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54"
        }
      ],
      "name": "initialize",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "is_global_short_data_ready",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "handler",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "is_active",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "set_handler",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "assets",
          "concreteTypeId": "8b2275934873f381a769c82334e6f66595eeb350d8b2dd012eef4d9bb117942b"
        },
        {
          "name": "average_prices",
          "concreteTypeId": "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82"
        }
      ],
      "name": "set_init_data",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "account",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "collateral_asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "index_asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "is_long",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        },
        {
          "name": "size_delta",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "mark_price",
          "concreteTypeId": "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e"
        },
        {
          "name": "is_increase",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "update_global_short_data",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "5432468599230875534",
      "concreteTypeId": "4b640168969ec78e1ff09a1a9ccc8234ffaf1b016e862a4251e06348e490b3d3"
    },
    {
      "logId": "15067712915018640395",
      "concreteTypeId": "d11b451065406c0beca7d6d175c3cc06c08e09f1cbdec00e56acfdc96f9b0672"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "033c36471a746cfbe47c035c46b522ab2b5f49a227af71cf2d99d7387b2d555f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "38a1b038206f348ec947ba5770c6d713148c9d8bb0b312f47acc88777da1c09d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "6add8c562715ad20c2454007cb6b136306d610c65b182e9024790934ecb00830",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "8032f0e2772c61017a1002bcc5a23774fd1ab1969a75e4b3838e5bee345be53f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class ShortsTrackerInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    get_global_short_average_prices: FunctionFragment;
    get_next_delta: FunctionFragment;
    get_next_global_average_price: FunctionFragment;
    get_next_global_short_data: FunctionFragment;
    get_realized_pnl: FunctionFragment;
    initialize: FunctionFragment;
    is_global_short_data_ready: FunctionFragment;
    set_handler: FunctionFragment;
    set_init_data: FunctionFragment;
    update_global_short_data: FunctionFragment;
  };
}

export class ShortsTracker extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: ShortsTrackerInterface;
  declare functions: {
    get_global_short_average_prices: InvokeFunction<[asset: AssetIdInput], BN>;
    get_next_delta: InvokeFunction<[delta: BigNumberish, average_price: BigNumberish, next_price: BigNumberish, realized_pnl: Signed256Input], [boolean, BN]>;
    get_next_global_average_price: InvokeFunction<[average_price: BigNumberish, next_price: BigNumberish, next_size: BigNumberish, delta: BigNumberish, realized_pnl: Signed256Input], BN>;
    get_next_global_short_data: InvokeFunction<[account: IdentityInput, collateral_asset: AssetIdInput, index_asset: AssetIdInput, next_price: BigNumberish, size_delta: BigNumberish, is_increase: boolean], [BN, BN]>;
    get_realized_pnl: InvokeFunction<[account: IdentityInput, collateral_asset: AssetIdInput, index_asset: AssetIdInput, size_delta: BigNumberish, is_increase: boolean], Signed256Output>;
    initialize: InvokeFunction<[vault: ContractIdInput], void>;
    is_global_short_data_ready: InvokeFunction<[], boolean>;
    set_handler: InvokeFunction<[handler: IdentityInput, is_active: boolean], void>;
    set_init_data: InvokeFunction<[assets: Vec<AssetIdInput>, average_prices: Vec<BigNumberish>], void>;
    update_global_short_data: InvokeFunction<[account: IdentityInput, collateral_asset: AssetIdInput, index_asset: AssetIdInput, is_long: boolean, size_delta: BigNumberish, mark_price: BigNumberish, is_increase: boolean], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
